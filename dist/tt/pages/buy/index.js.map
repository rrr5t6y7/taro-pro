{"version":3,"file":"pages/buy/index.js","sources":["webpack:///./src/pages/buy/index.jsx","webpack:///./src/pages/buy/index.jsx?92f1"],"sourcesContent":["/*\n * @Author: JJ\n * @Title: 完整购物流程页面\n * @Description: 这个页面展示taro-hooks下的生命周期，以及整个购物流程\n * @Date: 2021-10-26 10:52:27\n * @Last Modified by: JJ\n * @Last Modified time: 2021-11-01 15:37:33\n */\nimport React, { useEffect, useState, useReducer } from \"react\";\nimport { observer, MobXProviderContext } from \"mobx-react\";\nimport { View, Button } from \"@tarojs/components\";\nimport { AtList, AtListItem } from \"taro-ui\";\nimport Taro, {\n  useReady,\n  useDidShow,\n  useDidHide,\n  usePullDownRefresh,\n  useReachBottom,\n  usePageScroll,\n  useResize,\n  useShareAppMessage,\n  useTabItemTap,\n  useAddToFavorites,\n} from \"@tarojs/taro\"; // Taro 专有 Hooks\nimport { POST } from \"../../utils/request\";\nimport api from \"./service\";\n\nconst list = [];\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"updateList\":\n      return [...action.payload];\n    default:\n      throw new Error();\n  }\n}\n\nconst List = observer(() => {\n  const [state, dispatch] = useReducer(reducer, list);\n\n  const fetchFn = () => {\n    const params = {\n      keyword: \"1\",\n      latitude: 22.53594898978371,\n      longitude: 113.9418198219386,\n      pageIndex: 1,\n      sort: 5,\n      firstPageShowShoppingCart: null,\n      isSearchHt: 1,\n      cityCode: \"31359\",\n    };\n    return POST({\n      url: api.searchList,\n      params: params,\n      closeLoading: true,\n      success: (res) => {\n        // 可以选择这种useReducer方式，也可以用useState方式，如果需要状态管理，则选择mobx方式\n        //  res;\\\n        // dispatch({ type: \"updateList\", payload: res.list });\n      },\n      fail: function () {},\n    });\n    // console.log(\"apple\", apple);\n\n    // console.log(\"effect\");\n  };\n\n  // 1\n  useDidShow(() => {\n    console.log(\"show\");\n  });\n\n  // 2\n  useEffect(async () => {\n    // 异步写法\n    const a = await fetchFn();\n    console.log(\"gg\", a);\n    dispatch({ type: \"updateList\", payload: a.data.list });\n  }, []);\n\n  // 3\n  useReady(() => {\n    console.log(\"ready\");\n  });\n\n  useDidHide(() => {\n    console.log(\"hide\");\n  });\n\n  // 监听用户下拉动作\n  usePullDownRefresh(() => {\n    console.log(\"down\");\n  });\n\n  // 监听用户上拉触底事件\n  useReachBottom(() => {\n    console.log(\"bottom\");\n  });\n\n  // 监听用户滑动页面事件\n  usePageScroll((res) => {\n    console.log(\"scroll\", res);\n  });\n\n  // 旋转时触发\n  useResize((res) => {\n    console.log(\"resize\", res);\n  });\n\n  // 监听用户点击页面内转发按钮（Button 组件 openType='share'）或右上角菜单“转发”按钮的行为，并自定义转发内容\n  useShareAppMessage((res) => {\n    if (res.from === \"button\") {\n      // 来自页面内转发按钮\n      console.log(res.target);\n    }\n    return {\n      title: \"自定义转发标题\",\n      path: \"/page/user?id=123\",\n    };\n  });\n\n  // 点击 tab 时触发\n  useTabItemTap((res) => {\n    console.log(\"tab\", res);\n  });\n\n  // 监听用户点击右上角菜单“收藏”按钮的行为，并自定义收藏内容\n  useAddToFavorites((res) => {\n    // webview 页面返回 webviewUrl\n    console.log(\"WebviewUrl: \", res.webviewUrl);\n    return {\n      title: \"自定义标题\",\n      imageUrl: \"http://demo.png\",\n      query: \"name=xxx&age=xxx\",\n    };\n  });\n\n  const gotoDetail = () => {\n    Taro.navigateTo({\n      url: \"/pages/buy/detail/index\",\n    });\n  };\n\n  return (\n    <View className=\"App\">\n      <AtList>\n        {state.map((item, index) => {\n          return (\n            <AtListItem\n              key={index}\n              // <Image src={item.images} />\n              title={item.productName}\n              note={item.merchantName}\n              arrow=\"right\"\n              thumb={item.images}\n              onClick={gotoDetail}\n            />\n          );\n        })}\n      </AtList>\n    </View>\n  );\n});\n\nexport default List;\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js!./index.jsx\"\nvar config = {\"navigationBarTitleText\":\"购物流程\",\"enableShareAppMessage\":true,\"enableShareTimeline\":true};\ncomponent.enableShareTimeline = true\ncomponent.enableShareAppMessage = true\nvar inst = Page(createPageConfig(component, 'pages/buy/index', {root:{cn:[]}}, config || {}))\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAWA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AAEA;AACA;AAPA;AASA;AATA;AAaA;AA3BA;AACA;AACA;AA6BA;AACA;AAhCA;AACA;AAmCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AADA;AAIA;AACA;AAjDA;AACA;AAoDA;AACA;AAtDA;AACA;AAyDA;AACA;AA3DA;AACA;AA8DA;AACA;AAhEA;AACA;AAmEA;AACA;AArEA;AACA;AAwEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AA9EA;AACA;AAoFA;AACA;AAtFA;AACA;AAyFA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AACA;AASA;AACA;AACA;AADA;AADA;AACA;AAKA;AACA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AADA;AADA;AA3GA;AA+HA;;;;;;;;;;;;;ACrKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}